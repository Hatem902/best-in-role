generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

//I want to describe you a situation and then you will make the necessary prisma model (or models) for it. So, we have a user, and a user can optionally vote one of the toplane players as his best-in-role toplaner, one of the mid lane players as his best-in-role midlaner, one of the adc players as his best-in-role adc, one of the jungle  players as his best-in-role jungler, and one of the support players as his best-in-role support.

model User {
  id        String  @unique
  username  String? @unique
  topPlayer Top?    @relation("top", fields: [top], references: [id])
  top       String?
  jglPlayer Jgl?    @relation("jgl", fields: [jgl], references: [id])
  jgl       String?
  midPlayer Mid?    @relation("mid", fields: [mid], references: [id])
  mid       String?
  adcPlayer Adc?    @relation("adc", fields: [adc], references: [id])
  adc       String?
  supPlayer Sup?    @relation("sup", fields: [sup], references: [id])
  sup       String?
}

model Top {
  id     String  @id @default(cuid())
  name   String  @unique
  team   String?
  region String
  users  User[]  @relation("top")
}

model Jgl {
  id     String  @id @default(cuid())
  name   String  @unique
  team   String?
  region String
  users  User[]  @relation("jgl")
}

model Mid {
  id     String  @id @default(cuid())
  name   String  @unique
  team   String?
  region String
  users  User[]  @relation("mid")
}

model Adc {
  id     String  @id @default(cuid())
  name   String  @unique
  team   String?
  region String
  users  User[]  @relation("adc")
}

model Sup {
  id     String  @id @default(cuid())
  name   String  @unique
  team   String?
  region String
  users  User[]  @relation("sup")
}
